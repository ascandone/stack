---
version: '3.8'

services:
  dex:
    image: ghcr.io/dexidp/dex:latest
    volumes:
      - ./dex-config.yaml:/etc/dex/config.docker.yaml
    ports:
      - "5556:5556/tcp"
      - "8080:8080/tcp"
  postgres:
    image: 'postgres:13-alpine'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U auth']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: 'auth'
      POSTGRES_PASSWORD: 'auth'
      POSTGRES_DB: 'auth'
  auth:
    build:
      context: .
      dockerfile: reflex.Dockerfile
    entrypoint:
    - reflex
    - -r
    - \.go$$
    - -s
    - go
    - run
    - main.go
    - serve
    environment:
      DEBUG: 1
      POSTGRES_URI: "host=postgres user=auth password=auth dbname=auth port=5432 sslmode=disable"
      CAOS_OIDC_DEV: 1
    network_mode: service:dex
    depends_on:
    - dex
    - postgres
    volumes:
    - .:/src
    working_dir: /src
  frontend:
    image: node:alpine
    ports:
      - 3000:3000/tcp
    volumes:
      - ./demo:/src
    working_dir: /src
    entrypoint:
      - npm
      - start
