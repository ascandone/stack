---
version: "3"

vars:
  version: 1.0.0-{{now | date "20060102"}}
  openapiGeneratorVersion: v6.4.0

tasks:
  sdk:build:
    desc: Build the SDK
    cmds:
      - npm install
      - npm run build
      - cat <<< $(jq '.info.version = "{{.version}}"' build/generate.json) > build/generate.json

  sdk:generate:
    internal: true
    cmds:
      - rm -rf ../sdks/{{.target}}
      - >
        docker run --rm -w /local -v ${PWD}/..:/local openapitools/openapi-generator-cli:{{.openapiGeneratorVersion}} generate
        -i ./openapi/build/generate.json
        -g {{ (split "-" .target)._0 }}
        -c ./openapi/configs/{{.target}}.yaml
        -o ./sdks/{{.target}}
        --git-user-id=formancehq
        --git-repo-id=formance-sdk-{{.target}}
        -p packageVersion={{.version}}
        -p apiVersion={{.version}}

  sdk:test:
    internal: true
    vars:
      testingImage:
        sh: docker build -q -f tests/{{.target}}/Dockerfile ..
    cmds:
    - docker run --rm {{.testingImage}}

  sdk:generate:typescript-node:
    cmds:
    - task: sdk:generate
      vars:
        target: typescript-node
    - cmd: |
        cd ../sdks/typescript-node && npm i --save-dev @types/node && \
        npm run build

  sdk:test:typescript-node:
    cmds:
    - task: sdk:test
      vars:
        target: typescript-node

  sdk:generate:all:
    desc: Generate all client code
    deps:
    - task: sdk:generate:typescript-node
#    - task: sdk:generate:python
#    - task: sdk:generate:java
#    - task: sdk:generate:php
#    - task: sdk:generate:go
#      - task: sdk:generate
#        vars: {CLI_ARGS: "go", version: "{{.version}}"}
#      - task: sdk:generate
#        vars: {CLI_ARGS: "java", version: "{{.version}}"}
#      - task: sdk:generate
#        vars: {CLI_ARGS: "php", version: "{{.version}}"}
#      - task: sdk:generate
#        vars: {CLI_ARGS: "python", version: "{{.version}}"}
#      - task: sdk:generate
#        vars: {CLI_ARGS: "typescript-node", version: "{{.version}}"}
